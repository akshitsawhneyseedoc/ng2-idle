{"version":3,"sources":["simpleexpiry.js","simpleexpiry.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACPA,2BAAyB,cAAc,CAAC,CAAA;AAMxC;IAAkC,gCAAU;IAG1C;QAAgB,iBAAO,CAAC;QAFhB,cAAS,GAAS,IAAI,CAAC;IAEN,CAAC;IAO1B,2BAAI,GAAJ,UAAK,KAAY;QACf,EAAE,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IACH,mBAAC;AAAD,CAjBA,AAiBC,CAjBiC,uBAAU,GAiB3C;AAjBY,oBAAY,eAiBxB,CAAA","file":"simpleexpiry.js","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar idleexpiry_1 = require('./idleexpiry');\r\nvar SimpleExpiry = (function (_super) {\r\n    __extends(SimpleExpiry, _super);\r\n    function SimpleExpiry() {\r\n        _super.call(this);\r\n        this.lastValue = null;\r\n    }\r\n    SimpleExpiry.prototype.last = function (value) {\r\n        if (value !== void 0) {\r\n            this.lastValue = value;\r\n        }\r\n        return this.lastValue;\r\n    };\r\n    return SimpleExpiry;\r\n}(idleexpiry_1.IdleExpiry));\r\nexports.SimpleExpiry = SimpleExpiry;\r\n//# sourceMappingURL=simpleexpiry.js.map","import {IdleExpiry} from './idleexpiry';\n\n/*\n * Represents a simple in-memory store of expiry values.\n * @extends IdleExpiry\n */\nexport class SimpleExpiry extends IdleExpiry {\n  private lastValue: Date = null;\n\n  constructor() { super(); }\n\n  /*\n   * Gets or sets the last expiry date.\n   * @param value - The expiry value to set; omit to only return the value.\n   * @return The current expiry value.\n   */\n  last(value?: Date): Date {\n    if (value !== void 0) {\n      this.lastValue = value;\n    }\n\n    return this.lastValue;\n  }\n}\n"],"sourceRoot":"/source/"}